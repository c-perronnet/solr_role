---

group:
  {{ solr_group }}:
    exists: true

user:
  {{ solr_user }}:
    exists: true
    groups:
      - {{ solr_group }}

file:
  {{ solr_log_dir }}:
    owner: {{ solr_user }}
    group: {{ solr_group }}
    exists: true
    filetype: directory
  {{ solr_home }}:
    owner: {{ solr_user }}
    group: {{ solr_group }}
    exists: true
    filetype: directory
  {{ solr_data_dir }}:
    owner: {{ solr_user }}
    group: {{ solr_group }}
    exists: true
    filetype: directory
  {{ solr_log_dir }}/{{ solr_log_file_name }}:
    owner: {{ solr_user }}
    group: {{ solr_group }}
    exists: true
    filetype: file
  {{ solr_log_dir }}/{{ solr_log_slow_queries_file_name }}:
    owner: {{ solr_user }}
    group: {{ solr_group }}
    exists: true
    filetype: file
  {{ solr_installation_dir }}/newrelic/newrelic.jar:
    owner: {{ solr_user }}
    group: {{ solr_group }}
    exists: true
    filetype: file
  {{ solr_installation_dir }}/newrelic/newrelic.yml:
    owner: {{ solr_user }}
    group: {{ solr_group }}
    exists: true
    filetype: file
  {{ solr_collections_config_tmp_dir }}:
    owner: {{ solr_user }}
    group: {{ solr_group }}
    exists: true
    filetype: directory
{% for lib in solr_external_libraries %}
  {{ solr_external_libraries_destination_path }}/{{ lib.artifact_id }}-{{ lib.version }}.jar:
    exists: true
    filetype: file
{% endfor %}
{% for pkg in solr_external_packages %}
  {{ solr_data_dir }}/filestore/{{ pkg.artifact_id }}/{{ pkg.version }}/{{ pkg.artifact_id }}-{{ pkg.version }}.jar:
    exists: true
    filetype: file
{% endfor %}

    
port:
  tcp:{{ solr_port }}:
    listening: true
  tcp:{{ solr_jmx_port }}:
    listening: true

http:
  {{ solr_url }}/admin/collections?action=LIST:
    status: 200
    body: [ {{ solr_collections.keys() | join(', ') }} ]
  {{ solr_url }}/admin/collections?action=CLUSTERSTATUS&collection={{ solr_collections.keys() | list | first }}:
    status: 200
    body:
      - '"autoAddReplicas":"False"'
  {{ solr_url }}/admin/collections?action=CLUSTERSTATUS&collection={{ solr_collections.keys() | list | last }}:
    status: 200
    body:
      - '"autoAddReplicas":"True"'
  {{ solr_url }}/admin/collections?action=BACKUP&collection={{ solr_collections.keys() | list | first }}&name={{ inventory_hostname }}-{{ ansible_date_time.epoch }}&location=/&repository=s3&incremental=false&wt=json:
    status: 200

service:
  solr:
    enabled: true
    running: true
